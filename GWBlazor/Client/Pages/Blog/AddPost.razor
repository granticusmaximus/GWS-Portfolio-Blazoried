@page "/addpost"
@page "/editpost/{PostId}"
@using GWBlazor.Shared
@using GWBlazor.Client.Component
@inject HttpClient client
@inject NavigationManager helper

<WdHeader Heading="GWS Articles" SubHeading="Add Post"></WdHeader>

<div class="container">
    <div class="row">
        <div class="col-md-12">
            <div class="editor">
                <input @bind=@Title placeholder="Title" class="form-control" />
                <textarea @bind=@Post placeholder="Write your post" rows="25"></textarea>
                <button class="btn btn-primary float-right" @onclick="@SavePost">Post</button>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter] public string PostId { get; set; }

    protected string Post { get; set; }
    protected string Title { get; set; }
    protected int CharacterCount { get; set; }
    protected Post ExistingBlogPost { get; set; } = new Post();
    protected bool IsEdit => string.IsNullOrEmpty(PostId) ? false : true;


    protected override async Task OnInitializedAsync()
    {
        if (!string.IsNullOrEmpty(PostId))
        {
            await LoadPost();
        }
    }

    public async Task SavePost()
    {
        var newPost = new Post()
        {
            Title = Title,
            Author = "Grant Watson",
            Content = Post,
            Posted = DateTime.Now
        };

        var savedPost = await client.PostAsJsonAsync<Post>(Urls.AddBlogPost, newPost);

        helper.NavigateTo($"viewpost/{savedPost}");
    }

    public async Task UpdatePost()
    {
        await client.PutAsJsonAsync(Urls.UpdateBlogPost.Replace("{id}", PostId), ExistingBlogPost);

        helper.NavigateTo($"viewpost/{ExistingBlogPost}");
    }

    private async Task LoadPost()
    {
        ExistingBlogPost = await client.GetFromJsonAsync<Post>(Urls.BlogPost.Replace("{id}", PostId));
    }
}
