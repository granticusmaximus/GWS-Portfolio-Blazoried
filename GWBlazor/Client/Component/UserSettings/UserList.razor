@using GWBlazor.Shared
@inject HttpClient client
@inject IJSRuntime js

<hr />
<div class="form-group">
    <a class="btn btn-success" href="user/create"><i class="oi oi-plus"></i> Create New</a>
</div>
<br>

@if (usersList == null)
{
    <p>Loading User List...</p>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Id</th>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Email</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (ApplicationUser user in usersList)
            {
                <tr>
                    <td>@user.Id</td>
                    <td>@user.FirstName</td>
                    <td>@user.LastName</td>
                    <td>@user.Email</td>
                    <td>
                        <a class="btn btn-success" href="user/edit/@user.Id">Edit</a>
                        <button class="btn btn-danger" @onclick="@(() => Delete(user.Id))">Delete</button>
                    </td>
                </tr>
            }

        </tbody>
    </table>
}
@code {
    ApplicationUser[] usersList { get; set; }

    protected override async Task OnInitializedAsync()
    {
        usersList = await client.GetFromJsonAsync<ApplicationUser[]>("api/User/GetAllUsers");
    }

    async Task Delete(string userID)
    {
        var user = usersList.First(x => x.Id == userID);
        if (await js.InvokeAsync<bool>("confirm", $"Do you want to delete {user.FirstName}'s ({user.Id}) Record?"))
        {
            await client.DeleteAsync($"api/User/DeleteUser/{userID}");
            await OnInitializedAsync();
        }
    }
}